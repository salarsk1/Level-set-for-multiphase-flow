//Written by Salar Safarkhani

#include "tricubic.h"
#include "datag.h"
#include <cmath>
void triCubic::triCubicInit(){
A = {0.0};
A[0][0] = 1.0; A[1][8] = 1.0; A[2][0] = -3.0; A[2][1] = 3.0;
A[2][8] = -2.0; A[2][9] = -1.0; A[3][0] = 2.0; A[3][1] = -2.0;
A[3][8] = 1.0; A[3][9] = 1.0; A[4][16] = 1.0; A[5][32]=1; A[6][16] = -3.0;
A[6][17] = 3.0; A[6][32] = -2.0; A[6][33] = -1.0; A[7][16] = 2.0;
A[7][17] = -2.0; A[7][32] = 1.0; A[7][33] = 1.0; A[8][0] = -3.0;
A[8][2] = 3.0; A[8][16] = -2.0; A[8][18] = -1.0; A[9][8] = -3.0;
A[9][10] = 3.0; A[9][32] = -2.0; A[9][34] = -1.0; A[10][0] = 9.0;
A[10][1] = -9.0; A[10][2] = -9.0; A[10][3] = 9.0; A[10][8] = 6.0;
A[10][9] = 3.0; A[10][10] = -6.0; A[10][11] = -3.0; A[10][16] = 6.0;
A[10][17] = -6.0; A[10][18] = 3.0; A[10][19] = -3.0; A[10][32] = 4.0;
A[10][33] = 2.0; A[10][34] = 2.0; A[10][35] = 1.0; A[11][0] = -6.0;
A[11][1] = 6.0; A[11][2] = 6.0; A[11][3] = -6.0; A[11][8] = -3.0;
A[11][9] = -3.0; A[11][10] = 3.0; A[11][11] = 3.0; A[11][16] = -4.0;
A[11][17] = 4.0; A[11][18] = -2.0; A[11][19] = 2.0; A[11][32] = -2.0;
A[11][33] = -2.0; A[11][34] = -1.0; A[11][35] = -1.0; A[12][0] = 2.0;
A[12][2] = -2.0; A[12][16] = 1.0; A[12][18] = 1.0; A[13][8] = 2.0;
A[13][10] = -2.0; A[13][32] = 1.0; A[13][34] = 1.0; A[14][0] = -6.0;
A[14][1] = 6.0; A[14][2] = 6.0; A[14][3] = -6.0; A[14][8] = -4.0;
A[14][9] = -2.0; A[14][10] = 4.0; A[14][11] = 2.0; A[14][16] = -3.0;
A[14][17] = 3.0; A[14][18] = -3.0; A[14][19] = 3.0; A[14][32] = -2.0;
A[14][33] = -1.0; A[14][34] = -2.0; A[14][35] = -1.0; A[15][0] = 4.0;
A[15][1] = -4.0; A[15][2] = -4.0; A[15][3] = 4.0; A[15][8] = 2.0;
A[15][9] = 2.0; A[15][10] = -2.0; A[15][11] = -2.0; A[15][16] = 2.0;
A[15][17] = -2.0; A[15][18] = 2.0; A[15][19] = -2.0; A[15][32] = 1.0;
A[15][33] = 1.0; A[15][34] = 1.0; A[15][35] = 1.0; A[16][24] = 1.0;
A[17][40] = 1.0; A[18][24] = -3.0; A[18][25] = 3.0; A[18][40] = -2.0;
A[18][41] = -1.0; A[19][24] = 2.0; A[19][25] = -2.0; A[19][40] = 1.0;
A[19][41] = 1.0; A[20][48] = 1.0; A[21][56] = 1.0; A[22][48] = -3.0;
A[22][49] = 3.0; A[22][56] = -2.0; A[22][57] = -1.0; A[23][48] = 2.0;
A[23][49] = -2.0; A[23][56] = 1.0; A[23][57] = 1.0; A[24][24] = -3.0;
A[24][26] = 3.0; A[24][48] = -2.0; A[24][50] = -1.0; A[25][40] = -3.0;
A[25][42] = 3.0; A[25][56] = -2.0; A[25][58] = -1.0; A[26][24] = 9.0;
A[26][25] = -9.0; A[26][26] = -9.0; A[26][27] = 9.0; A[26][40] = 6.0;
A[26][41] = 3.0; A[26][42] = -6.0; A[26][43] = -3.0; A[26][48] = 6.0;
A[26][49] = -6.0; A[26][50] = 3.0; A[26][51] = -3.0; A[26][56] = 4.0;
A[26][57] = 2.0; A[26][58] = 2.0; A[26][59] = 1.0; A[27][24] = -6.0;
A[27][25] = 6.0; A[27][26] = 6.0; A[27][27] = -6.0; A[27][40] = -3.0;
A[27][41] = -3.0; A[27][42] = 3.0; A[27][43] = 3.0; A[27][48] = -4.0;
A[27][49] = 4.0; A[27][50] = -2.0; A[27][51] = 2.0; A[27][56] = -2.0;
A[27][57] = -2.0; A[27][58] = -1.0; A[27][59] = -1.0; A[28][24] = 2.0;
A[28][26] = -2.0; A[28][48] = 1.0; A[28][50] = 1.0; A[29][40] = 2.0;
A[29][42] = -2.0; A[29][56] = 1.0; A[29][58] = 1.0; A[30][24] = -6.0;
A[30][25] = 6.0; A[30][26] = 6.0; A[30][27] = -6.0; A[30][40] = -4.0;
A[30][41] = -2.0; A[30][42] = 4.0; A[30][43] = 2.0; A[30][48] = -3.0;
A[30][49] = 3.0; A[30][50] = -3.0; A[30][51] = 3.0; A[30][56] = -2.0;
A[30][57] = -1.0; A[30][58] = -2.0; A[30][59] = -1.0; A[31][24] = 4.0;
A[31][25] = -4.0; A[31][26] = -4.0; A[31][27] = 4.0; A[31][40] = 2.0;
A[31][41] = 2.0; A[31][42] = -2.0; A[31][43] = -2.0; A[31][48] = 2.0;
A[31][49] = -2.0; A[31][50] = 2.0; A[31][51] = -2.0; A[31][56] = 1.0;
A[31][57] = 1.0; A[31][58] = 1.0; A[31][59] = 1.0; A[32][0] = -3.0;
A[32][4] = 3.0; A[32][24] = -2.0; A[32][28] = -1.0; A[33][8] = -3.0;
A[33][12] = 3.0; A[33][40] = -2.0; A[33][44] = -1.0; A[34][0] = 9.0;
A[34][1] = -9.0; A[34][4] = -9.0; A[34][5] = 9.0; A[34][8] = 6.0;
A[34][9] = 3.0; A[34][12] = -6.0; A[34][13] = -3.0; A[34][24] = 6.0;
A[34][25] = -6; A[34][28] = 3.0; A[34][29] = -3.0; A[34][40] = 4.0;
A[34][41] = 2.0; A[34][44] = 2.0; A[34][45] = 1.0; A[35][0] = -6.0;
A[35][1] = 6.0; A[35][4] = 6.0; A[35][5] = -6.0; A[35][8] = -3.0;
A[35][9] = -3.0; A[35][12] = 3.0; A[35][13] = 3.0; A[35][24] = -4.0;
A[35][25] = 4.0; A[35][28] = -2.0; A[35][29] = 2.0; A[35][40] = -2.0;
A[35][41] = -2.0; A[35][44] = -1.0; A[35][45] = -1.0; A[36][16] = -3.0;
A[36][20] = 3.0; A[36][48] = -2.0; A[36][52] = -1.0; A[37][32] = -3.0;
A[37][36] = 3.0; A[37][56] = -2.0; A[37][60] = -1.0; A[38][16] = 9.0;
A[38][17] = -9.0; A[38][20] = -9.0; A[38][21] = 9.0; A[38][32] = 6.0;
A[38][33] = 3.0; A[38][36] = -6.0; A[38][27] = -3.0; A[38][48] = 6.0;
A[38][49] = -6.0; A[38][52] = 3.0; A[38][53] = -3.0; A[38][56] = 4.0;
A[38][57] = 2.0; A[38][60] = 2.0; A[38][61] = 1.0; A[39][16] = -6.0;
A[39][17] = 6.0; A[39][20] = 6.0; A[39][21] = -6.0; A[39][32] = -3.0;
A[39][33] = -3.0; A[39][36] = 3.0; A[39][37] = 3.0; A[39][48] = -4.0;
A[39][49] = 4.0; A[39][52] = -2.0; A[39][53] = 2.0; A[39][56] = -2.0;
A[39][57] = -2.0; A[39][60] = -1.0; A[39][61] = -1.0; A[40][0] = 9.0;
A[40][2] = -9.0; A[40][4] = -9.0; A[40][6] = 9.0; A[40][16] = 6.0;
A[40][18] = 3.0; A[40][20] = -6.0; A[40][22] = -3.0; A[40][24] = 6.0;
A[40][26] = -6.0; A[40][28] = 3.0; A[40][30] = -3.0; A[40][48] = 4.0;
A[40][50] = 2.0; A[40][52] = 2.0; A[40][54] = 1.0; A[41][8] = 9.0;
A[41][10] = -9.0; A[41][12] = -9.0; A[41][14] = 9.0; A[41][32] = 6.0;
A[41][34] = 3.0; A[41][36] = -6.0; A[41][38] = -3.0; A[41][40] = 6.0;
A[41][42] = -6.0; A[41][44] = 3.0; A[41][46] = -3.0; A[41][56] = 4.0;
A[41][58] = 2.0; A[41][60] = 2.0; A[41][62] = 1.0; A[42][0] = -27.0;
A[42][1] = 27.0; A[42][2] = 27.0; A[42][3] = -27.0; A[42][4] = 27.0;
A[42][5] = -27.0; A[42][6] = -27.0; A[42][7] = 27.0; A[42][8] = -18;
A[42][9] = -9.0; A[42][10] = 18.0; A[42][11] = 9.0; A[42][12] = 18.0;
A[42][13] = 9.0; A[42][14] = -18.0; A[42][15] = -9.0; A[42][16] = -18.0;
A[42][17] = 18.0; A[42][18] = -9.0; A[42][19] = 9.0; A[42][20] = 18.0;
A[42][21] = -18.0; A[42][22] = 9.0; A[42][23] = -9.0; A[42][24] = -18.0;
A[42][25] = 18.0; A[42][26] = 18.0; A[42][27] = -18.0; A[42][28] = -9.0;
A[42][29] = 9.0; A[42][30] = 9.0; A[42][31] = -9.0; A[42][32] = -12.0;
A[42][33] = -6.0; A[42][34] = -6.0; A[42][35] = -3.0; A[42][36] = 12.0;
A[42][37] = 6.0; A[42][38] = 6.0; A[42][39] = 3.0; A[42][40] = -12.0;
A[42][41] = -6.0; A[42][42] = 12.0; A[42][43] = 6.0; A[42][44] = -6.0;
A[42][45] = -3.0; A[42][46] = 6.0; A[42][47] = 3.0; A[42][48] = -12.0;
A[42][49] = 12.0; A[42][50] = -6.0; A[42][51] = 6.0; A[42][52] = -6.0;
A[42][53] = 6.0; A[42][54] = -3.0; A[42][55] = 3.0; A[42][56] = -8.0;
A[42][57] = -4.0; A[42][58] = -4.0; A[42][59] = -2.0; A[42][60] = -4.0;
A[42][61] = -2.0; A[42][62] = -2.0; A[42][63] = -1.0; A[43][0] = 18.0;
A[43][1] = -18.0; A[43][2] = -18.0; A[43][3] = 18.0; A[43][4] = -18.0;
A[43][5] = 18.0; A[43][6] = 18.0; A[43][7] = -18.0; A[43][8] = 9.0;
A[43][9] = 9.0; A[43][10] = -9.0; A[43][11] = -9.0; A[43][12] = -9.0;
A[43][13] = -9.0; A[43][14] = 9.0; A[43][15] = 9.0; A[43][16] = 12.0;
A[43][17] = -12.0; A[43][18] = 6.0; A[43][19] = -6.0; A[43][20] = -12.0;
A[43][21] = 12.0; A[43][22] = -6.0; A[43][23] = 6.0; A[43][24] = 12.0;
A[43][25] = -12.0; A[43][26] = -12.0; A[43][27] = 12.0; A[43][28] = 6.0;
A[43][29] = -6.0; A[43][30] = -6.0; A[43][31] = 6.0; A[43][32] = 6.0;
A[43][33] = 6.0; A[43][34] = 3.0; A[43][35] = 3.0; A[43][36] = -6.0;
A[43][37] = -6.0; A[43][38] = -3.0; A[43][39] = -3.0; A[43][40] = 6.0;
A[43][41] = 6.0; A[43][42] = -6.0; A[43][43] = -6.0; A[43][44] = 3.0;
A[43][45] = 3.0; A[43][46] = -3.0; A[43][47] = -3.0; A[43][48] = 8.0;
A[43][49] = -8.0; A[43][50] = 4.0; A[43][51] = -4.0; A[43][52] = 4.0;
A[43][53] = -4.0; A[43][54] = 2.0; A[43][55] = -2.0; A[43][56] = 4.0;
A[43][57] = 4.0; A[43][58] = 2.0; A[43][59] = 2.0; A[43][60] = 2.0;
A[43][61] = 2.0; A[43][62] = 1.0; A[43][63] = 1.0; A[44][0] = -6.0;
A[44][2] = 6.0; A[44][4] = 6.0; A[44][6] = -6.0; A[44][16] = -3.0;
A[44][18] = -3.0; A[44][20] = 3.0; A[44][22] = 3.0; A[44][24] = -4.0;
A[44][26] = 4.0; A[44][28] = -2.0; A[44][30] = 2.0; A[44][48] = -2.0;
A[44][50] = -2.0; A[44][52] = -1.0; A[44][54] = -1.0; A[45][8] = -6.0;
A[45][10] = 6.0; A[45][12] = 6.0; A[45][14] = -6.0; A[45][32] = -3.0;
A[45][34] = -3.0; A[45][36] = 3.0; A[45][38] = 3.0; A[45][40] = -4.0;
A[45][42] = 4.0; A[45][44] = -2.0; A[45][46] = 2.0; A[45][56] = -2.0;
A[45][58] = -2.0; A[45][60] = -1.0; A[45][62] = -1.0; A[46][0] = 18.0;
A[46][1] = -18.0; A[46][2] = -18.0; A[46][3] = 18.0; A[46][4] = -18.0;
A[46][5] = 18.0; A[46][6] = 18.0; A[46][7] = -18.0; A[46][8] = 12.0;
A[46][9] = 6.0; A[46][10] = -12.0; A[46][11] = -6.0; A[46][12] = -12.0;
A[46][13] = -6.0; A[46][14] = 12.0; A[46][15] = 6.0; A[46][17] = -9.0;
A[46][18] = 9.0; A[46][19] = -9.0; A[46][20] = -9.0; A[46][21] = 9.0;
A[46][22] = -9.0; A[46][23] = 9.0; A[46][24] = 12.0; A[46][25] = -12.0;
A[46][26] = -12.0; A[46][27] = 12.0; A[46][28] = 6.0; A[46][29] = -6.0;
A[46][30] = -6.0; A[46][31] = 6.0; A[46][32] = 6.0; A[46][33] = 3.0;
A[46][34] = 6.0; A[46][35] = 3.0; A[46][36] = -6.0; A[46][37] = -3.0;
A[46][38] = -6.0; A[46][39] = -3.0; A[46][40] = 8.0; A[46][41] = 4.0;
A[46][42] = -8.0; A[46][43] = -4.0; A[46][44] = 4.0; A[46][45] = 2.0;
A[46][46] = -4.0; A[46][47] = -2.0; A[46][48] = 6.0; A[46][49] = -6.0;
A[46][50] = 6.0; A[46][51] = -6.0; A[46][52] = 3.0; A[46][53] = -3.0;
A[46][54] = 3.0; A[46][55] = -3.0; A[46][56] = 4.0; A[46][57] = 2.0;
A[46][58] = 4.0; A[46][59] = 2.0; A[46][60] = 2.0; A[46][61] = 1.0;
A[46][62] = 2.0; A[46][63] = 1.0; A[47][0] = -12.0; A[47][1] = 12.0;
A[47][2] = 12.0; A[47][3] = -12.0; A[47][4] = 12.0; A[47][5] = -12.0;
A[47][6] = -12.0; A[47][7] = 12.0; A[47][8] = -6.0; A[47][9] = -6.0;
A[47][10] = 6.0; A[47][11] = 6.0; A[47][12] = 6.0; A[47][13] = 6.0;
A[47][14] = -6.0; A[47][15] = -6.0; A[47][16] = -6.0; A[47][17] = 6.0;
A[47][18] = -6.0; A[47][19] = 6.0; A[47][20] = 6.0; A[47][21] = -6.0;
A[47][22] = 6.0; A[47][23] = -6.0; A[47][24] = -8.0; A[47][25] = 8.0;
A[47][26] = 8.0; A[47][27] = -8.0; A[47][28] = -4.0; A[47][29] = 4.0;
A[47][30] = 4.0; A[47][31] = -4.0; A[47][32] = -3.0; A[47][33] = -3.0;
A[47][34] = -3.0; A[47][35] = -3.0; A[47][36] = 3.0; A[47][37] = 3.0;
A[47][38] = 3.0; A[47][39] = 3.0; A[47][40] = -4.0; A[47][41] = -4.0;
A[47][42] = 4.0; A[47][43] = 4.0; A[47][44] = -2.0; A[47][45] = -2.0;
A[47][46] = 2.0; A[47][47] = 2.0; A[47][48] = -4.0; A[47][49] = 4.0;
A[47][50] = -4.0; A[47][51] = 4.0; A[47][52] = -2.0; A[47][53] = 2.0;
A[47][54] = -2.0; A[47][55] = 2.0; A[47][56] = -2.0; A[47][57] = -2.0;
A[47][58] = -2.0; A[47][59] = -2.0; A[47][60] = -1.0; A[47][61] = -1.0;
A[47][62] = -1.0; A[47][63] = -1.0; A[48][0] = 2.0; A[48][4] = -2.0;
A[48][24] = 1.0; A[48][28] = 1.0; A[49][8] = 2.0; A[49][12] = -2.0;
A[49][40] = 1.0; A[49][44] = 1.0; A[50][0] = -6.0; A[50][1] = 6.0;
A[50][4] = 6.0; A[50][5] = -6.0; A[50][8] = -4.0; A[50][9] = -2.0;
A[50][12] = 4.0; A[50][13] = 2.0; A[50][24] = -3.0; A[50][25] = 3.0;
A[50][28] = -3.0; A[50][29] = 3.0; A[50][40] = -2.0; A[50][41] = -1.0;
A[50][44] = -2.0; A[50][45] = -1.0; A[51][0] = 4.0; A[51][1] = -4.0;
A[51][4] = -4.0; A[51][5] = 4.0; A[51][8] = 2.0; A[51][9] = 2.0;
A[51][12] = -2.0; A[51][13] = -2.0; A[51][24] = 2.0; A[51][25] = -2.0;
A[51][28] = 2.0; A[51][29] = -2.0; A[51][40] = 1.0; A[51][41] = 1.0;
A[51][44] = 1.0; A[51][45] = 1.0; A[52][16]  = 2.0; A[52][20] = -2.0;
A[52][48] = 1.0; A[52][52] = 1.0; A[53][32] = 2.0; A[53][36] = -2.0;
A[53][56] = 1.0; A[53][60] = 1.0; A[54][16] = -6.0; A[54][17] = 6.0;
A[54][20] = 6.0; A[54][21] = -6.0; A[54][32] = -4.0; A[54][33] = -2.0;
A[54][36] = 4.0; A[54][37] = 2.0; A[54][48] = -3.0; A[54][49] = 3.0;
A[54][52] = -3.0; A[54][53] = 3.0; A[54][56] = -2.0; A[54][57] = -1.0;
A[54][60] = -2.0; A[54][61] = -1.0; A[55][16] = 4.0; A[55][17] = -4.0;
A[55][20] = -4.0; A[55][21] = 4.0; A[55][32] = 2.0; A[55][33] = 2.0;
A[55][36] = -2.0; A[55][37] = -2.0; A[55][48] = 2.0; A[55][49] = -2.0;
A[55][52] = 2.0; A[55][53] = -2.0; A[55][56] = 1.0; A[55][57] = 1.0;
A[55][60] = 1.0; A[55][61] = 1.0; A[56][0] = -6.0; A[56][2] = 6.0;
A[56][4] = 6.0; A[56][6] = -6.0; A[56][16] = -4.0; A[56][18] = -2.0;
A[56][20] = 4.0; A[56][22] = 2.0; A[56][24] = -3.0; A[56][26] = 3.0;
A[56][28] = -3.0; A[56][30] = 3.0; A[56][48] =-2.0; A[56][50] = -1.0;
A[56][52] = -2.0; A[56][54] = -1.0; A[57][8] = -6.0; A[57][10] = 6.0;
A[57][12] = 6.0; A[57][14] = -6.0; A[57][32] = -4.0; A[57][34] = -2.0;
A[57][36] = 4.0; A[57][38] = 2.0; A[57][40] = -3.0; A[57][42] = 3.0;
A[57][44] = -3.0; A[57][46] = 3.0; A[57][56] = -2.0; A[57][58] = -1.0;
A[57][60] = -2.0; A[57][62] = -1.0; A[58][0] = 18.0; A[58][1] = 18.0;
A[58][2] = -18.0; A[58][3] = 18.0; A[58][4] = -18.0; A[58][5] = 18.0;
A[58][6] = 18.0; A[58][7] = -18.0; A[58][8] = 12.0; A[58][9] = 6.0;
A[58][10] = -12.0; A[58][11] = -6.0; A[58][12] = -12.0; A[58][13] = -6.0;
A[58][14] = 12.0; A[58][15] = 6.0; A[58][16] = 12.0; A[58][17] = -12.0;
A[58][18] = 6.0; A[58][19] = -6.0; A[58][20] = -12.0; A[58][21] = 12.0;
A[58][22] = -6.0; A[58][23] = 6.0; A[58][24] = 9.0; A[58][25] = -9.0;
A[58][26] = -9.0; A[58][27] = 9.0; A[58][28] = 9.0; A[58][29] = -9.0;
A[58][30] = -9.0; A[58][31] = 9.0; A[58][32] = 8.0; A[58][33] = 4.0;
A[58][34] = 4.0; A[58][35] = 2.0; A[58][36] = -8.0; A[58][37] = -4.0;
A[58][38] = -4.0; A[58][39] = -2.0; A[58][40] = 6.0; A[58][41] = 3.0;
A[58][42] = -6.0; A[58][43] = -3.0; A[58][44] = 6.0; A[58][45] = 3.0;
A[58][46] = -6.0; A[58][47] = -3.0; A[58][48] = 6.0; A[58][49] = -6.0;
A[58][50] = 3.0; A[58][51] = -3.0; A[58][52] = 6.0; A[58][53] = -6.0;
A[58][54] = 3.0; A[58][55] = -3.0; A[58][56] = 4.0; A[58][57] = 2.0;
A[58][58] = 2.0; A[58][59] = 1.0; A[58][60] = 4.0; A[58][61] = 2.0;
A[58][62] = 2.0; A[58][63] = 1.0; A[59][0] = -12.0; A[59][1] = 12.0;
A[59][2] = 12.0; A[59][3] = -12.0; A[59][4] = 12.0; A[59][5] = -12.0;
A[59][6] = -12.0; A[59][7] = 12.0; A[59][8] = -6.0; A[59][9] = -6.0;
A[59][10] = 6.0; A[59][11] = 6.0; A[59][12] = 6.0; A[59][13] = 6.0;
A[59][14] = -6.0; A[59][15] = -6.0; A[59][16] = -8.0; A[59][17] = 8.0;
A[59][18] = -4.0; A[59][19] = 4.0; A[59][20] = 8.0; A[59][21] = -8.0;
A[59][22] = 4.0; A[59][23] = -4.0; A[59][24] = -6.0; A[59][25] = 6.0;
A[59][26] = 6.0; A[59][27] = -6.0; A[59][28] = -6.0; A[59][29] = 6.0;
A[59][30] = 6.0; A[59][31] = -6.0; A[59][32] = -4.0; A[59][33] = -4.0;
A[59][34] = -2.0; A[59][35] = -2.0; A[59][36] = 4.0; A[59][37] = 4.0;
A[59][38] = 2.0; A[59][39] = 2.0; A[59][40] = -3.0; A[59][41] = -3.0;
A[59][42] = 3.0; A[59][43] = 3.0; A[59][44] = -3.0; A[59][45] = -3.0;
A[59][46] = 3.0; A[59][47] = 3.0; A[59][48] = -4.0; A[59][49] = 4.0;
A[59][50] = -2.0; A[59][51] = 2.0; A[59][52] = -4.0; A[59][53] = 4.0;
A[59][54] = -2.0; A[59][55] = 2.0; A[59][56] = -2.0; A[59][57] = -2.0;
A[59][58] = -1.0; A[59][59] = -1.0; A[59][60] = -2.0; A[59][61] = -2.0;
A[59][62] = -1.0; A[59][63] = -1.0; A[60][0] = 4.0; A[60][2] = -4.0;
A[60][4] = -4.0; A[60][6] = 4.0; A[60][16] = 2.0; A[60][18] = 2.0;
A[60][20] = -2.0; A[60][22] = -2.0; A[60][24] = 2.0; A[60][26] = -2.0;
A[60][28] = 2.0; A[60][30] = -2.0; A[60][48] = 1.0; A[60][50] = 1.0;
A[60][52] = 1.0; A[60][54] = 1.0; A[61][8] = 4.0; A[61][10] = -4.0;
A[61][12] = -4.0; A[61][14] = 4.0; A[61][32] = 2.0; A[61][34] = 2.0;
A[61][36] = -2.0; A[61][38] = -2.0; A[61][40] = 2.0; A[61][42] = -2.0;
A[61][44] = 2.0; A[61][46] = -2.0; A[61][56] = 1.0; A[61][58] = 1.0;
A[61][60] = 1.0; A[61][62] = 1.0; A[62][0] = -12.0; A[62][1] = 12.0;
A[62][2] = 12.0; A[62][3] = -12.0; A[62][4] = 12.0; A[62][5] = -12.0;
A[62][6] = -12.0; A[62][7] = 12.0; A[62][8] = -8.0; A[62][9] = -4.0;
A[62][10] = 8.0; A[62][11] = 4.0; A[62][12] = 8.0; A[62][13] = 4.0;
A[62][14] = -8.0; A[62][15] = -4.0; A[62][16] = -6.0; A[62][16] = -6.0;
A[62][17] = 6.0; A[62][18] = -6.0; A[62][19] = 6.0; A[62][20] = 6.0;
A[62][21] = -6.0; A[62][22] = 6.0; A[62][23] = -6.0; A[62][24] = -6.0;
A[62][25] = 6.0; A[62][26] = 6.0; A[62][27] = -6.0; A[62][28] = -6.0;
A[62][29] = 6.0; A[62][30] = 6.0; A[62][31] = -6.0; A[62][32] = -4.0;
A[62][33] = -2.0; A[62][34] = -4.0; A[62][35] = -2.0; A[62][36] = 4.0;
A[62][37] = 2.0; A[62][38] = 4.0; A[62][39] = 2.0; A[62][40] = -4.0;
A[62][41] = -2.0; A[62][42] = 4.0; A[62][43] = 2.0; A[62][44] = -4.0;
A[62][45] = -2.0; A[62][46] = 4.0; A[62][47] = 2.0; A[62][48] = -3.0;
A[62][49] = 3.0; A[62][50] = -3.0; A[62][51] = 3.0; A[62][52] = -3.0;
A[62][53] = 3.0; A[62][54] = -3.0; A[62][55] = 3.0; A[62][56] = -2.0;
A[62][57] = -1.0; A[62][58] = -2.0; A[62][59] = -1.0; A[62][60] = -2.0;
A[62][61] = -1.0; A[62][62] = -2.0; A[62][63] = -1.0; A[63][0] = 8.0;
A[63][1] = -8.0; A[63][2] = -8.0; A[63][3] = 8.0; A[63][4] = -8.0;
A[63][5] = 8.0; A[63][6] = 8.0; A[63][7] = -8.0; A[63][8] = 4.0;
A[63][9] = 4.0; A[63][10] = -4.0; A[63][11] = -4.0; A[63][12] = -4.0;
A[63][13] = -4.0; A[63][14] = 4.0; A[63][15] = 4.0; A[63][16] = 4.0;
A[63][17] = -4.0; A[63][18] = 4.0; A[63][19] = -4.0; A[63][20] = -4.0;
A[63][21] = 4.0; A[63][22] = -4.0; A[63][23] = 4.0; A[63][24] = 4.0;
A[63][25] = -4.0; A[63][26] = -4.0; A[63][27] = 4.0; A[63][28] = 4.0;
A[63][29] = -4.0; A[63][30] = -4.0; A[63][31] = 4.0; A[63][32] = 2.0;
A[63][33] = 2.0; A[63][34] = 2.0; A[63][35] = 2.0; A[63][36] = -2.0;
A[63][37] = -2.0; A[63][38] = -2.0; A[63][39] = -2.0; A[63][40] = 2.0;
A[63][41] = 2.0; A[63][42] = -2.0; A[63][43] = -2.0; A[63][44] = 2.0;
A[63][45] = 2.0; A[63][46] = -2.0; A[63][47] = -2.0; A[63][48] = 2.0;
A[63][49] = -2.0; A[63][50] = 2.0; A[63][51] = -2.0; A[63][52] = 2.0;
A[63][53] = -2.0; A[63][54] = 2.0; A[63][55] = -2.0; A[63][56] = 1.0;
A[63][57] = 1.0; A[63][58] = 1.0; A[63][59] = 1.0; A[63][60] = 1.0;
A[63][61] = 1.0; A[63][62] = 1.0; A[63][63] = 1.0;
arraySet = true;
};

void triCubic::triCubicGetCoeff(const vector<double> &f,\
										  const vector<double> &d3fdx,\
										  const vector<vector<double>> &dfdx,\
										  const vector<vector<double>> &d2fdx,\
										  vector<double> &coeff){

std::array<double, 64> xx;
std::unique_ptr<global_variable> pgv(new global_variable);
for(auto i=0; i<8;   i++) xx[i] = f[i];
for(auto i=8; i<16 ; i++) xx[i] = dfdx[0][i-8]*pgv->dxyz[0];
for(auto i=16; i<24; i++) xx[i] = dfdx[1][i-16]*pgv->dxyz[1];
for(auto i=24; i<32; i++) xx[i] = dfdx[2][i-24]*pgv->dxyz[2];
for(auto i=32; i<40; i++) xx[i]=d2fdx[0][i-32]*pgv->dxyz[0]*pgv->dxyz[1];
for(auto i=40; i<48; i++) xx[i]=d2fdx[1][i-40]*pgv->dxyz[0]*pgv->dxyz[2];
for(auto i=48; i<56; i++) xx[i]=d2fdx[2][i-48]*pgv->dxyz[1]*pgv->dxyz[2];
for(auto i=56; i<64; i++) xx[i]=d2fdx[0][i-56]*pgv->dxyz[0]*pgv->dxyz[1]\
																*pgv->dxyz[2];
coeff = {0};
for(auto i=0; i<64; i++){
	for(auto j=0; j<64; j++){
		coeff[i] = coeff[i] + A[i][j] * xx[j];
	};
};
};

void triCubic::triCubicGetCoeff2(const vector<double> &xx,\
										   vector<double> &coeff){
if(!arraySet) triCubicInit();
coeff = {0};
for(auto i=0; i<64; i++){
	for(auto j=0; j<64; j++){
		coeff[i] = coeff[i] + A[i][j] * xx[j];
	};
};
};

double triCubic::triCubicEval(const vector<double> &coeff,\
										const vector<double> &xyz){
double phi = 0.0;
int ic = 0;
for(auto i=0; i<3; i++){
	for(auto j=0; j<3; j++){
		for(auto k=0; k<3; k++){
			phi += coeff[ic]*pow(xyz[0],2)*pow(xyz[1],2)*pow(xyz[2],2);
			ic  +=1;
		}
	}
}
return phi;
};

double triCubic::triCubicDerEval(const vector<double> &coeff, \
										const vector<double> &xyz, \
										const vector<int> &ddir){
double phi = 0.0;
double help;
std::unique_ptr<global_variable> pgv(new global_variable);
for(auto k=ddir[0]; k<3; k++){
	for(auto j=ddir[1]; j<3; j++){
		for(auto i=ddir[2]; i<3; i++){
			auto ic = i + 4*j + 16*k;
			help = coeff[ic] *pow(xyz[0], i-ddir[0])*pow(xyz[1], j-ddir[1])*\
									pow(xyz[2], k-ddir[2]);
			for(auto ii=0; ii<ddir[0]-1; ii++){
				help *= static_cast<double>(i-ii);
			}
			for(auto jj=0; jj<ddir[1]-1; jj++){
				help *= static_cast<double>(j-jj);
			}
			for(auto kk=0; kk<ddir[1]-1; kk++){
				help *= static_cast<double>(k-kk);
			}
			phi+=help;
		}
	}
}
phi *= pow(pgv->rdxyz[0],ddir[0])*pow(pgv->rdxyz[1],ddir[1])* \
		 pow(pgv->rdxyz[2],ddir[2]);
return phi;
};


array<array<double, 64>, 64> triCubic::A;
bool triCubic::arraySet = false;

